generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String
  role      Role      @default(USER)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  imageUrl  String?
  password  String?

  orders Order[]
}

model Product {
  id        String      @id @default(uuid())
  name      String
  type      ProductType
  createdAt DateTime?   @default(now())
  updatedAt DateTime?   @updatedAt

  orders Order[]
  ebooks ProductEbook[]
}

model Order {
  id               String    @id
  userId           String
  trackingNumber   String?
  createdAt        DateTime?
  updatedAt        DateTime? @updatedAt
  productId        String?
  shippingDate     DateTime?
  shippingProvider String?

  product Product? @relation(fields: [productId], references: [id])
  user    User     @relation(fields: [userId], references: [id])
}

model Ebook {
  id              String    @id @default(uuid())
  title           String
  description     String
  fileName        String?
  pdfUrlCreatedAt DateTime?
  pdfUrl          String?
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @updatedAt

  products ProductEbook[]
}

model ProductEbook {
  productId String
  ebookId   String
  createdAt DateTime? @default(now())

  product Product @relation(fields: [productId], references: [id])
  ebook   Ebook   @relation(fields: [ebookId], references: [id])

  @@id([productId, ebookId])
}

enum Role {
  USER
  ADMIN
}

enum ProductType {
  WEIGHT_LOSS
  ERECTILE_DYSFUNCTION
  PROSTATE
  NEUROPATHY
  MEMORY
  DIABETES
  PAIN
  REJUVENATION
  GUT_HEALTH
}
